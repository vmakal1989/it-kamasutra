{"version":3,"sources":["hoc/AuthRendirect.jsx","components/Navbar/Dialogs/Dialogs.module.css","components/Navbar/Dialogs/DialogUser/Dialog.jsx","components/Navbar/Dialogs/MessagesUser/Message.jsx","components/Navbar/Dialogs/Dialogs.jsx","components/Navbar/Dialogs/DialogsContainer.jsx"],"names":["mapStateToProps","state","auth","isAuth","AuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogUser","path","id","className","style","dialogs","activeClassName","active","name","MessagesUser","messages","maxLength15","maxLength","minLength2","minLength","ReduxDialogsForm","reduxForm","form","onSubmitSuccess","result","dispatch","reset","onSubmit","handleSubmit","sendMessage","Field","component","FormsControls","type","validate","required","Dialogs","dialogsElement","dialogsElements","map","d","Dialog","messagesElement","m","Message","message","dialogsBody","userBody","comments","formData","addNewMessage","compose"],"mappings":"iOAIMA,EAAkB,SAACC,GACrB,MAAO,CACHC,KAAMD,EAAMC,KAAKC,SAIZC,EAAe,SAACC,GAAe,IAClCC,EADiC,iLAG/B,OAAKC,KAAKC,MAAMN,KACT,kBAACG,EAAcE,KAAKC,OADE,kBAAC,IAAD,CAAUC,GAAI,eAHZ,GACPC,IAAML,WAStC,OAF4BM,YAAQX,EAARW,CAAyBL,K,oBCjBzDM,EAAOC,QAAU,CAAC,YAAc,6BAA6B,QAAU,yBAAyB,OAAS,wBAAwB,SAAW,0BAA0B,YAAc,+B,+FCgBrKC,EAZI,SAACN,GAEhB,IAAIO,EAAO,YAAcP,EAAMQ,GAE/B,OACI,yBAAKC,UAAWC,IAAMC,SAClB,kBAAC,IAAD,CAASV,GAAIM,EAAMK,gBAAiBF,IAAMG,QAASb,EAAMc,QCAtDC,EARM,SAACf,GAClB,OACI,6BACKA,EAAMgB,W,yCCEbC,EAAcC,YAAU,IACxBC,EAAaC,YAAU,GAgDvBC,EAAmBC,YAAU,CAACC,KAAM,cAAeC,gBAJrC,SAACC,EAAQC,GACzBA,EAASC,YAAM,kBAGML,EAtBL,SAACtB,GACjB,OACI,0BAAM4B,SAAU5B,EAAM6B,cAClB,yBAAKpB,UAAWC,IAAMoB,aAClB,6BACI,kBAACC,EAAA,EAAD,CAAOjB,KAAM,WACNkB,UAAWC,IACXC,KAAM,WACNC,SAAU,CAACC,IAAUnB,EAAYE,MAE5C,6BACI,8CAaLkB,EAhDC,SAACrC,GAEb,IAAIsC,EAAiBtC,EAAMuC,gBAAgB5B,QAAQ6B,KAAK,SAAAC,GAAC,OAAI,kBAACC,EAAD,CAAY5B,KAAM2B,EAAE3B,KAAMN,GAAIiC,EAAEjC,QACzFmC,EAAkB3C,EAAMuC,gBAAgBvB,SAASwB,KAAK,SAAAI,GAAC,OAAI,kBAACC,EAAD,CAAc7B,SAAU4B,EAAEE,aAMzF,OACI,yBAAKrC,UAAWC,IAAMqC,aAClB,yBAAKtC,UAAWC,IAAMsC,UACjBV,GAEL,yBAAK7B,UAAWC,IAAMuC,UAClB,6BACKN,GAEL,kBAACtB,EAAD,iBAAsBrB,EAAtB,CAA6B4B,SAb1B,SAACsB,GACZlD,EAAMmD,cAAcD,U,uBCLbE,sBACXxD,IACAO,aARoB,SAACV,GACrB,MAAO,CACH8C,gBAAiB9C,EAAM8C,mBAMH,CAACY,oBAFdC,CAIdf","file":"static/js/4.74938466.chunk.js","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport const AuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.auth) return <Redirect to={'/login'}/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirect = connect(mapStateToProps)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirect;\r\n};\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsBody\":\"Dialogs_dialogsBody__4-00K\",\"dialogs\":\"Dialogs_dialogs__qaH3-\",\"active\":\"Dialogs_active__TM1d1\",\"comments\":\"Dialogs_comments__3AODd\",\"sendMessage\":\"Dialogs_sendMessage__2GLTU\"};","import React from 'react';\r\nimport style from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogUser = (props) => {\r\n\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <NavLink to={path} activeClassName={style.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogUser;","import React from 'react';\r\n\r\n\r\nconst MessagesUser = (props) => {\r\n    return (\r\n        <div>\r\n            {props.messages}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessagesUser;","import React from 'react';\r\nimport style from './Dialogs.module.css';\r\nimport DialogUser from \"./DialogUser/Dialog\";\r\nimport MessagesUser from \"./MessagesUser/Message\";\r\nimport {Field, reduxForm, reset} from \"redux-form\";\r\nimport {FormsControls, Textarea} from \"../../common/FormsControls/FormControls\";\r\nimport {maxLength, minLength, required} from \"../../../helpers/validators/validators\";\r\n\r\nconst maxLength15 = maxLength(15);\r\nconst minLength2 = minLength(2);\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElement = props.dialogsElements.dialogs.map( d => <DialogUser name={d.name} id={d.id} /> );\r\n    let messagesElement = props.dialogsElements.messages.map( m => <MessagesUser messages={m.message} />);\r\n\r\n    let onSubmit = (formData) => {\r\n        props.addNewMessage(formData)\r\n    };\r\n\r\n    return (\r\n        <div className={style.dialogsBody}>\r\n            <div className={style.userBody}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={style.comments}>\r\n                <div>\r\n                    {messagesElement}\r\n                </div>\r\n                <ReduxDialogsForm {...props} onSubmit={onSubmit}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst DialogsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={style.sendMessage}>\r\n                <div>\r\n                    <Field name={'textarea'}\r\n                           component={FormsControls}\r\n                           type={'textarea'}\r\n                           validate={[required, maxLength15,minLength2]}/>\r\n                </div>\r\n                <div>\r\n                    <button>Send</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst afterSubmit = (result, dispatch) => {\r\n    dispatch(reset('dialogsForm'));\r\n};\r\n\r\nconst ReduxDialogsForm = reduxForm({form: 'dialogsForm', onSubmitSuccess: afterSubmit})(DialogsForm);\r\n\r\nexport default Dialogs;","import {addMessage, addNewMessage, changeMessage} from \"../../../Redux/pageContentsReducers/dialogsElements-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AuthRedirect} from \"../../../hoc/AuthRendirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsElements: state.dialogsElements\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    AuthRedirect,\r\n    connect(mapStateToProps,{addNewMessage})\r\n)\r\n(Dialogs);\r\n"],"sourceRoot":""}